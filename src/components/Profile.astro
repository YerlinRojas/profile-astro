---
import Data from '../../public/data/profile.json';

// Define las interfaces para los datos
interface SocialMedia {
    name: string;
    url: string;
    icon: string;
}

interface Profile {
    photo: string;
    name: string;
    position: string;
    description: string;
    skills: string;
    rrss: SocialMedia[];
}

// Asume que el archivo JSON es un array de perfiles y toma el primero (o el adecuado)
const profiles: Profile[] = Data;
const profile = profiles[0]; // Obtén el primer perfil (o el que necesites)
const { photo, name, position, description, skills, rrss } = profile;
---
<!-- <script is:inline src="/js/hover.js"></script> -->

<div class="relative h-auto">
    <!-- Photo -->
    <div class="-translate-y-8 w-72 h-72">
        <img class="w-full h-full rounded-full object-cover" src={photo} alt={name}>
    </div>
    <!-- Buttons -->
    <div class="absolute bottom-0 left-1/2 transform -translate-x-1/2 mb-4 flex space-x-4">
        <div class="-translate-x-full">
            <button onclick="toggleSection('description')" class="btn-hover">
                <img class="w-10 h-10 bg-white dark:bg-gray-900 rounded-full" src="/description.svg" alt="Show Description">
            </button>
        </div>
        <div class="translate-y-7">
            <button onclick="toggleSection('skills')" class="btn-hover">
                <img class="w-10 h-10 bg-white dark:bg-gray-900 rounded-full" src="/habilidades.svg" alt="Show Skills">
            </button>
        </div>
        <div class="translate-x-full">
            <button onclick="toggleSection('rrss')" class="btn-hover">
                <img class="w-10 h-10 bg-white dark:bg-gray-900 rounded-full" src="/gmail.svg" alt="Show Social Media">
            </button>
        </div>
    </div>
</div>

<!-- Profile Title and Position -->
<div class="flex flex-col mt-8 items-center justify-center">
    <h1 class="text-2xl font-bold text-gray-900 dark:text-white">{name}</h1>
    <h3 class="text-xl text-gray-600 dark:text-gray-300">{position}</h3>
</div>

<!-- Hidden Blocks -->
<div class="relative mt-4 ">
    <div id="description" class="dark:bg-gray-900 hidden absolute w-screen left-1/2 transform -translate-x-1/2 mt-8 p-4">
        <p class="p-10 text-gray-700 text-justify dark:text-gray-400">{description}</p>
    </div>
    <div id="skills" class="dark:bg-gray-900 hidden absolute w-screen left-1/2 transform -translate-x-1/2 mt-8 p-4">
        <h5 class="p-10  text-gray-500 text-center dark:text-gray-400">{skills}</h5>
    </div>
    <div id="rrss" class="dark:bg-gray-900 hidden absolute w-screen left-1/2 transform -translate-x-1/2 mt-8 p-4">
        <div class="flex space-x-4 justify-center gap-4">
            {rrss.map((social) => (
                <a href={social.url} target="_blank" rel="noopener noreferrer">
                    <img src={social.icon} alt={social.name} class="w-8 h-8">
                </a>
            ))}
        </div>
    </div>
</div>


<script>
    function toggleSection(sectionId) {
    const description = document.getElementById('description');
    const skills = document.getElementById('skills');
    const rrss = document.getElementById('rrss');

    // Oculta todas las secciones
    description.style.display = 'none';
    skills.style.display = 'none';
    rrss.style.display = 'none';

    // Muestra la sección seleccionada
    if (sectionId === 'description') {
        description.style.display = 'block';
    } else if (sectionId === 'skills') {
        skills.style.display = 'block';
    } else if (sectionId === 'rrss') {
        rrss.style.display = 'block';
    }
}
window.toggleSection = toggleSection;

</script>

<style>
    @keyframes slideInFromRight {
        0% {
            transform: translate(100%, -100%);
            opacity: 0;
        }
        100% {
            transform: translate(0, 0);
            opacity: 1;
        }
    }

    .btn-hover {
        box-sizing: border-box;
    }

    .btn-hover:hover {
        background-color: rgb(73, 180, 223);
        border-radius: 50% 5px;
    }
</style>
